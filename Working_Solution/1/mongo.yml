---
- name: Install and configure MongoDB
  hosts: all   
  become: true
  
  tasks:
    - name: Update package cache
      become: true
      apt:
        update_cache: yes

    # - name: reboot if kernel updated
    #   command: /sbin/reboot
    #   async: 1
    #   poll: 0
    #   ignore_errors: true
    #   register: reboot
    #   when: reboot_required.stat.exists
    #   changed_when: reboot.rc == 1

      # - name: Reboot the machine
      #   become: true
      #   reboot:
      #     reboot_timeout: 300
      #     pre_reboot_delay: 0
      #     post_reboot_delay: 30

  

    - name: Install MongoDB   # Default port is 27017
      apt:
        update_cache: yes # Run the equivalent of apt-get update before the operation. Can be run as part of the package installation or as a separate step.
        name: mongodb
        state: present
        
    - name: Start MongoDB service
      service:
        name: mongodb
        state: started
        enabled: yes  # Whether the service should start on boot.

    - name: Capture and expose IP address
      shell: hostname --all-ip-addresses | awk '{print $1}'
      register: ip_address_result

    - name: Set IP address as environment variable
      set_fact:
        mongo_ip: "{{ ip_address_result.stdout }}"

    - name: Create a file with the IP of the machine on /home/vagrant
      become: true
      shell: echo "{{ mongo_ip }}" > /home/vagrant/mongo_ip.txt

    - name: Copy file from the server with sudo
      fetch:
        src: "/home/vagrant/mongo_ip.txt"
        dest: "/Users/ayogun/Desktop/turbit/Working_Solution/1/"
        remote_src: true
        flat: true
        

    - name: Mongodb.conf file update
      lineinfile:
       path: /etc/mongodb.conf
       regexp: '^bindIp'
       line: 'bindIp: "{{ mongo_ip }}"'
       state: present   # Thanks to this option I add the line if it doesn't exist at all

######### Client #########

    # - name: Check if reboot is required
    #   stat:
    #     path: /var/run/reboot-required
    #   register: reboot_required
    #   changed_when: false

    # - name: Reboot the system
    #   command: sudo reboot
    #   when: reboot_required.stat.exists

    - name: Install WireGuard and OpenResolv
      apt:
        name:
          - wireguard
          - openresolv
        state: present
        update_cache: yes
      become: true

    - name: Copy mongo.conf file to the server
      copy:
        src: "/Users/ayogun/Desktop/turbit/Working_Solution/3/vpn/home/vagrant/algo/configs/172.16.13.149/wireguard/laptop.conf"
        dest: "/home/vagrant/"
        owner: vagrant
        group: vagrant
        mode: 0600
      

    - name: Install WireGuard configuration file
      become: true
      shell: sudo install -o root -g root -m 600 /home/vagrant/laptop.conf /etc/wireguard/wg0.conf


    - name: Start WireGuard VPN
      systemd:
        name: "wg-quick@wg0"
        state: started
        enabled: yes

